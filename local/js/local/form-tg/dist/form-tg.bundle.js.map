{"version":3,"file":"form-tg.bundle.js","sources":["../src/components/Text.js","../src/pages/Home.js","../src/components/Alert.js","../src/store.js","../src/pages/First.js","../src/pages/Second.js","../src/components/Otp.js","../src/pages/Third.js","../src/pages/Thanks.js","../src/form-tg.js"],"sourcesContent":["import \"./Text.css\";\nexport const Text = {\n\tname: \"Text\",\n\t/*html*/\n\ttemplate: `\n\t\t<div class=\"text\">\n\t\t\t<slot></slot>\n\t\t</div>\n  `,\n};\n","import { Text } from \"../components/Text\";\n\nexport const Home = {\n\tname: \"Home\",\n\tcomponents: { Text },\n\t/* html */\n\ttemplate: `\n    <Text>\n      <p><strong>1. Создание бота через BotFather</strong></p>\n      <blockquote>\n      <p>1. Откройте приложение Telegram и найдите бота <a\n      href=\"https://t.me/BotFather\">BotFather</a>.</p>\n      <p>2. Нажмите <strong>Start</strong> для начала работы с BotFather.</p>\n      <p>3. Для создания нового бота введите команду /newbot.</p>\n      <p>4. BotFather попросит вас ввести имя для вашего бота. Введите\n      желаемое имя (например, “МойБот”).</p>\n      <p>5. Далее потребуется указать уникальное имя пользователя (username)\n      для бота. Оно должно оканчиваться на слово bot (например,\n      MyTestBot).</p>\n      <p>6. После успешного создания BotFather выдаст вам <strong>токен\n      API</strong>. Этот токен понадобится для интеграции бота с нашей\n      системой.</p>\n      </blockquote>\n    </Text>\n    <RouterLink to=\"/first\">\n        <button class=\"btn btn-primary\">Далее</button>\n    </RouterLink>\n    <Text>\n      <p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n      нашему менеджеру поддержки.</p>\n    </Text>\n  `,\n};\n","import \"./Alert.css\";\nexport const Alert = {\n\tprops: [\"open\", \"type\"],\n\tname: \"Alert\",\n\t/*html */\n\ttemplate: `\n  <div v-if=\"type == 'error'\" role=\"alert\" class=\"alert alert-error\" :class=\"{open:open}\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"h-6 w-6 shrink-0 stroke-current\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\">\n      <path\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>\n    <span>\n      <slot></slot>\n    </span>\n  </div>\n\n  <div v-if=\"type == 'success'\" role=\"alert\" class=\"alert alert-success\" :class=\"{open:open}\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"h-6 w-6 shrink-0 stroke-current\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\">\n      <path\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>\n    <span>\n      <slot></slot>\n    </span>\n  </div>\n  `,\n};\n","import { defineStore } from \"ui.vue3.pinia\";\n\nexport const store = defineStore(\"store\", {\n\tstate: () => ({\n\t\tapi_key: \"\",\n\t}),\n\tgetters: {\n\t\tgetApiKeyLength() {\n\t\t\treturn this.api_key.length;\n\t\t},\n\t},\n\tactions: {\n\t\tsetApiKey(key) {\n\t\t\tthis.api_key = key;\n\t\t},\n\t},\n});\n","import { Text } from \"../components/Text\";\nimport { Alert } from \"../components/Alert\";\n\nimport { store } from \"../store\";\nimport { mapState, mapActions } from \"ui.vue3.pinia\";\n\nexport const First = {\n\tname: \"First\",\n\tcomponents: { Text, Alert },\n\tdata() {\n\t\treturn {\n\t\t\terror: false,\n\t\t\tprogress: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapState(store, [\"api_key\"]),\n\t},\n\tmethods: {\n\t\tsendApiKey() {\n\t\t\tthis.progress = true;\n\t\t\tBX.ajax\n\t\t\t\t.runComponentAction(\"custom:form-tg\", \"sendApiKey\", {\n\t\t\t\t\tmode: \"class\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tapi_key: this.api_key,\n\t\t\t\t\t},\n\t\t\t\t\tanalyticsLabel: {\n\t\t\t\t\t\tviewMode: \"grid\",\n\t\t\t\t\t\tfilterState: \"closed\",\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\tthis.progress = false;\n\t\t\t\t\t\tif (response.data.response.ok) {\n\t\t\t\t\t\t\tthis.error = false;\n\t\t\t\t\t\t\tthis.$router.push(\"/second\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.error = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\t//сюда будут приходить все ответы, у которых status !== 'success'\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t},\n\t\tonEnter() {\n\t\t\tif (this.api_key.length >= 46) this.sendApiKey();\n\t\t},\n\t\t...mapActions(store, [\"setApiKey\"]),\n\t},\n\twatch: {\n\t\tapi_key(newValue) {\n\t\t\tif (newValue.length > 0) {\n\t\t\t\tthis.error = false;\n\t\t\t}\n\t\t},\n\t},\n\t/*html*/\n\ttemplate: `\n    <Text>\n      <p><strong>2. Передача токена API нам</strong></p>\n      <blockquote>\n      <p>1. Скопируйте <strong>токен API</strong>, который вы получили от\n      BotFather.</p>\n      <p>2. Вставьте токен ниже в соответствующее поле. Мы используем его для связи вашего\n      бота с нашей системой.</p>\n      </blockquote>\n    </Text>\n\n    <label class=\"input input-bordered flex items-center gap-2 mb-8 input-primary\" :class=\"{'input-error':error}\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n        fill=\"currentColor\"\n        class=\"h-4 w-4 opacity-70\">\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z\"\n          clip-rule=\"evenodd\" />\n      </svg>\n      <input type=\"password\" class=\"grow\" @input=\"(e)=>setApiKey(e.currentTarget.value)\" :value=\"api_key\" @keyup.native.enter=\"onEnter\"/>\n      <span ref=\"progress\" class=\"loading loading-spinner loading-md transition-all\" :class=\"{'opacity-100':progress, 'opacity-0':!progress}\"></span>\n    </label>\n    <Alert :open=\"error\" :type=\"'error'\">Api ключ не найден</Alert>\n\n    <div class=\"join\">\n      <button @click=\"$router.back()\" class=\"btn btn-outline join-item\">Назад</button>\n      <button @click=\"sendApiKey\" class=\"btn btn-primary join-item\" :disabled=\"api_key.length<46 || error\">Далее</button>\n    </div>\n\n\t\t<Text>\n\t\t\t<p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n\t\t\tнашему менеджеру поддержки.</p>\n\t\t</Text>\n  `,\n};\n","import { Text } from \"../components/Text\";\nimport { Alert } from \"../components/Alert\";\nimport { store } from \"../store\";\nimport { mapState, mapActions } from \"ui.vue3.pinia\";\n\nimport { Otp } from \"../components/Otp\";\n\nexport const Second = {\n\tname: \"Second\",\n\tcomponents: { Text, Alert, Otp },\n\tdata() {\n\t\treturn {\n\t\t\terror: false,\n\t\t\tformOpen: false,\n\t\t\ttimer: 0,\n\t\t};\n\t},\n\tmounted() {\n\t\tif (this.api_key.length < 46) {\n\t\t\tthis.$router.push(\"/first\");\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapState(store, [\"api_key\"]),\n\t},\n\tmethods: {\n\t\tsendMessage() {\n\t\t\tif (this.timer > 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.timer = 60;\n\t\t\tlet interId = setInterval(() => {\n\t\t\t\tthis.timer--;\n\t\t\t\tif (this.timer === 0) {\n\t\t\t\t\tclearInterval(interId);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t\tBX.ajax\n\t\t\t\t.runComponentAction(\"custom:form-tg\", \"getUserId\", {\n\t\t\t\t\tmode: \"class\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tapi_key: this.api_key,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\tconsole.log(response?.data);\n\t\t\t\t\t\tthis.formOpen = true;\n\t\t\t\t\t},\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\tconsole.error(response);\n\t\t\t\t\t\tthis.error = true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t},\n\t\totpComplete(code) {\n\t\t\tBX.ajax\n\t\t\t\t.runComponentAction(\"custom:form-tg\", \"otpConfirm\", {\n\t\t\t\t\tmode: \"class\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcode: code,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\tif (response?.data === true) {\n\t\t\t\t\t\t\tthis.$router.push(\"/third\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.error = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\tconsole.error(response);\n\t\t\t\t\t\tthis.error = true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t},\n\t},\n\t/*html*/\n\ttemplate: `\n    <Text>\n      <p><strong>3. Получение вашего Telegram ID</strong></p>\n      <p>Для того чтобы мы могли отправлять вам заявки через бота, нам\n      потребуется ваш <strong>Telegram ID</strong>. Вот как его можно\n      получить:</p>\n      <blockquote>\n      <p>1. В вашем созданном боте отправьте любое сообщение (например,\n      “Привет”).</p>\n      <p>2. Мы отправим вам код, который нужно будет ввести в поле ниже.</p>\n      </blockquote>\n    </Text>\n\n    <Otp :error=\"error\" :open=\"formOpen\" :count=\"6\" @complete=\"otpComplete\" @input=\"error=false\"/>\n    <Alert :open=\"error\" :type=\"'error'\">Неверный код</Alert>\n\n    <div class=\"join\">\n\t\t\t<button @click=\"$router.back()\" class=\"btn btn-outline join-item\">Назад</button>\n\t\t\t<button @click=\"sendMessage\" class=\"btn btn-primary join-item\" :disabled=\"timer!=0\">\n\t\t\t\t<span v-if=\"timer==0\">Получить код</span>\n\t\t\t\t<span v-else class=\"countdown\">\n\t\t\t\t\t<span :style=\"{'--value':timer}\"></span>\n\t\t\t\t</span>\n\t\t\t</button>\n\n\n\t\t</div>\n\n\t\t<Text>\n\t\t\t<p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n\t\t\tнашему менеджеру поддержки.</p>\n\t\t</Text>\n  `,\n};\n","import \"./Otp.css\";\nexport const Otp = {\n\tprops: [\"count\", \"open\", \"error\"],\n\tname: \"Otp\",\n\tdata() {\n\t\treturn {\n\t\t\tcode: \"\",\n\t\t\tcurrentNumber: 1,\n\t\t};\n\t},\n\tmounted() {\n\t\tif (!this.count) {\n\t\t\tthis.count = 4;\n\t\t}\n\t},\n\tmethods: {\n\t\tselectDigit(n) {\n\t\t\tthis.$refs.otpInput.selectionStart = n - 1;\n\t\t\tthis.$refs.otpInput.selectionEnd = n;\n\t\t\tthis.currentNumber = this.$refs.otpInput.selectionStart + 1;\n\t\t},\n\n\t\tsetSelected(e) {\n\t\t\tthis.$emit(\"input\", e);\n\n\t\t\tif (e.code == \"Space\") {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t\tif (e.key == \"ArrowLeft\") {\n\t\t\t\tthis.$refs.otpInput.setSelectionRange(\n\t\t\t\t\tthis.$refs.otpInput.selectionStart - 1,\n\t\t\t\t\tthis.$refs.otpInput.selectionStart,\n\t\t\t\t\t\"forward\"\n\t\t\t\t);\n\t\t\t\tthis.currentNumber = this.$refs.otpInput.selectionStart + 1;\n\t\t\t} else if (e.key == \"ArrowRight\") {\n\t\t\t\tthis.$refs.otpInput.setSelectionRange(\n\t\t\t\t\tthis.$refs.otpInput.selectionStart,\n\t\t\t\t\tthis.$refs.otpInput.selectionStart + 1,\n\t\t\t\t\t\"forward\"\n\t\t\t\t);\n\t\t\t\tthis.currentNumber = this.$refs.otpInput.selectionStart + 2;\n\t\t\t} else if (e.key == \"Backspace\") {\n\t\t\t\te.preventDefault();\n\t\t\t\tlet start = this.$refs.otpInput.selectionStart;\n\t\t\t\tthis.code = this.code.slice(0, start) + this.code.slice(start + 1);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.$refs.otpInput.setSelectionRange(start - 1, start, \"forward\");\n\t\t\t\t}, 0);\n\t\t\t\tthis.currentNumber =\n\t\t\t\t\tthis.$refs.otpInput.selectionStart > 0\n\t\t\t\t\t\t? this.$refs.otpInput.selectionStart\n\t\t\t\t\t\t: 1;\n\t\t\t} else if (!isNaN(+e.key) && e.key != \" \") {\n\t\t\t\tthis.$refs.otpInput.setSelectionRange(\n\t\t\t\t\tthis.$refs.otpInput.selectionStart,\n\t\t\t\t\tthis.$refs.otpInput.selectionStart + 1,\n\t\t\t\t\t\"forward\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// console.log(e);\n\t\t\t}\n\t\t},\n\n\t\tchangeCode(e) {\n\t\t\tthis.code = e.currentTarget.value;\n\t\t\tthis.currentNumber = this.$refs.otpInput.selectionStart + 1;\n\t\t\tif (this.code.length == this.count) {\n\t\t\t\tthis.$emit(\"complete\", this.code);\n\t\t\t}\n\t\t},\n\t},\n\n\twatch: {\n\t\topen(val) {\n\t\t\tif (val) this.$refs.otpInput.focus();\n\t\t},\n\t},\n\t/*html*/\n\ttemplate: `\n  <div class=\"otp\" :class=\"{open:open, error:error}\">\n    <input type=\"text\" ref=\"otpInput\" autocomplete=\"one-time-code\" :maxlength=\"count\" inputmode=\"numeric\" @input=\"changeCode\" :value=\"code\" @keydown=\"setSelected\">\n    <div class=\"digits\" @click=\"$refs.otpInput.focus()\">\n      <span @click=\"selectDigit(n)\" v-for=\"n in count\" ref=\"digit\" :class=\"{'current':n == currentNumber,'field':code[n-1]}\">{{code[n-1]}}</span>\n    </div>\n  </div>\n  `,\n};\n","import { Text } from \"../components/Text\";\n\nexport const Third = {\n\tname: \"Third\",\n\tcomponents: { Text },\n\tdata() {\n\t\treturn {\n\t\t\tdataArr: {},\n\t\t};\n\t},\n\tmounted() {\n\t\tBX.ajax\n\t\t\t.runComponentAction(\"custom:form-tg\", \"getBotData\", {\n\t\t\t\tmode: \"class\",\n\t\t\t})\n\t\t\t.then(\n\t\t\t\t(response) => {\n\t\t\t\t\tthis.dataArr = response?.data;\n\t\t\t\t\tif (!this.dataArr.message_id) {\n\t\t\t\t\t\tthis.$router.push(\"/\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t(response) => {\n\t\t\t\t\tconsole.error(response);\n\t\t\t\t\tthis.$router.push(\"/\");\n\t\t\t\t}\n\t\t\t);\n\t},\n\tmethods: {\n\t\tconfirm() {\n\t\t\tBX.ajax\n\t\t\t\t.runComponentAction(\"custom:form-tg\", \"confirm\", {\n\t\t\t\t\tmode: \"class\",\n\t\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\tif (response?.data) {\n\t\t\t\t\t\t\tthis.$router.push(\"/thanks\");\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(response) => {\n\t\t\t\t\t\tconsole.error(response);\n\t\t\t\t\t\tthis.$router.push(\"/\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t},\n\t},\n\t/*html*/\n\ttemplate: `\n  <Text>\n    <p><strong>4. Подтверждение данных</strong></p>\n    <p><strong>Ваш аккаунт:</strong></p>\n    <blockquote>\n\n    <template v-if=\"!dataArr?.chat?.username\">\n      <p><div class=\"skeleton h-6 w-full\"></div></p>\n      <p><div class=\"skeleton h-40 w-40\"></div></p>\n    </template>\n    <template v-else>\n      <p>{{dataArr?.chat?.first_name}} {{dataArr?.chat?.last_name}} <strong>@{{dataArr?.chat?.username}}</strong></p>\n      <p>\n        <div class=\"avatar\">\n          <div class=\"rounded-xl w-40\">\n            <img :src=\"dataArr?.photo\"/>\n          </div>\n        </div>\n      </p>\n    </template>\n\n    </blockquote>\n    <p><strong>Ваш бот:</strong></p>\n    <blockquote>\n\n      <p v-if=\"!dataArr?.from?.username\"><div class=\"skeleton h-6 w-full\"></div></p>\n      <p v-else>{{dataArr?.from?.first_name}} <strong>@{{dataArr?.from?.username}}</strong></p>\n\n    </blockquote>\n  </Text>\n\n  <div class=\"join\">\n    <button @click=\"$router.back()\" class=\"btn btn-outline join-item\">Назад</button>\n    <button @click=\"confirm\" class=\"btn btn-primary join-item\">Подтвердить</button>\n  </div>\n\n  <Text>\n    <p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n    нашему менеджеру поддержки.</p>\n  </Text>\n  `,\n};\n","import { Alert } from \"../components/Alert\";\nimport { Text } from \"../components/Text\";\n\nexport const Thanks = {\n\tname: \"Thanks\",\n\tcomponents: { Text, Alert },\n\tdata() {\n\t\treturn {\n\t\t\tgo: false,\n\t\t};\n\t},\n\tmounted() {\n\t\tsetTimeout(() => {\n\t\t\tthis.go = true;\n\t\t}, 500);\n\t},\n\t/*html*/\n\ttemplate: `\n  <Text style=\"margin-bottom: 100px;\">\n    <p><strong>Всё готово!</strong></p>\n  </Text>\n  <Alert :open=\"go\" :type=\"'success'\">Ваш бот успешно подключен и настроен для работы с нашей системой. Теперь вы сможете получать заявки и уведомления через него.</Alert>\n  `,\n};\n\n{\n\t/* <Alert :open=\"go\" :type=\"'success'\">Спасибо за сотрудничество! Если у вас возникнут вопросы или потребуется помощь, наша команда поддержки всегда готова помочь.</Alert> */\n}\n","import { BitrixVue } from \"ui.vue3\";\nimport { createRouter, createWebHashHistory } from \"ui.vue3.router\";\n\nimport { createPinia } from \"ui.vue3.pinia\";\nconst store = createPinia();\nimport \"./style.css\";\n\nimport { Home } from \"./pages/Home.js\";\nimport { First } from \"./pages/First.js\";\nimport { Text } from \"./components/Text.js\";\nimport { Second } from \"./pages/Second.js\";\nimport { Third } from \"./pages/Third.js\";\nimport { Thanks } from \"./pages/Thanks.js\";\n\nexport class FormTg {\n\t#application;\n\tconstructor(rootNode) {\n\t\tthis.rootNode = document.querySelector(rootNode);\n\t}\n\n\tinit() {\n\t\tconst context = this;\n\t\tconst routes = [\n\t\t\t{ path: \"/\", component: Home },\n\t\t\t{ path: \"/first\", component: First },\n\t\t\t{ path: \"/second\", component: Second },\n\t\t\t{ path: \"/third\", component: Third },\n\t\t\t{ path: \"/thanks\", component: Thanks },\n\t\t\t{\n\t\t\t\tpath: \"/:pathMatch(.*)*\",\n\t\t\t\tredirect: \"/\",\n\t\t\t},\n\t\t];\n\t\tconst router = createRouter({\n\t\t\thistory: createWebHashHistory(),\n\t\t\troutes,\n\t\t});\n\t\tthis.#application = BitrixVue.createApp({\n\t\t\tname: \"FormTg\",\n\t\t\tcomponents: { Text },\n\t\t\tbeforeCreate() {\n\t\t\t\tthis.$bitrix.Application.set(context);\n\t\t\t},\n\t\t\t/* html */\n\t\t\ttemplate: `\n\t\t\t<div class=\"application\">\n\t\t\t\t<Text>\n\t\t\t\t\t<p><strong>Инструкция по созданию Telegram-бота</strong></p>\n\t\t\t\t\t<p>Для того чтобы настроить Telegram-бота и передать необходимые данные\n\t\t\t\t\tдля интеграции вашего мини-приложения, выполните следующие шаги:</p>\n\t\t\t\t</Text>\n\t\t\t\t<router-view v-slot=\"{ Component }\">\n\t\t\t\t\t<Transition>\n\t\t\t\t\t\t<Component :is=\"Component\" />\n\t\t\t\t\t</Transition>\n\t\t\t\t</router-view>\n\t\t\t</div>\n\t\t\t`,\n\t\t});\n\t\tthis.#application.use(router);\n\t\tthis.#application.use(store);\n\t\tthis.#application.mount(this.rootNode);\n\t}\n\n\tdestroy() {\n\t\tthis.#application.unmount();\n\t}\n}\n"],"names":["Text","name","template","Home","components","Alert","props","store","defineStore","state","api_key","getters","getApiKeyLength","this","length","actions","setApiKey","key","First","data","error","progress","computed","mapState","methods","sendApiKey","BX","ajax","runComponentAction","mode","analyticsLabel","viewMode","filterState","then","response","_this","ok","$router","push","console","log","onEnter","mapActions","watch","newValue","Second","Otp","code","currentNumber","mounted","count","selectDigit","n","$refs","otpInput","selectionStart","selectionEnd","setSelected","e","$emit","preventDefault","stopPropagation","setSelectionRange","start","slice","setTimeout","isNaN","changeCode","currentTarget","value","open","val","focus","formOpen","timer","sendMessage","interId","setInterval","clearInterval","otpComplete","_this2","Third","dataArr","message_id","confirm","Thanks","go","createPinia","FormTg","rootNode","babelHelpers","_classPrivateFieldInitSpec","writable","document","querySelector","context","routes","path","component","redirect","router","createRouter","history","createWebHashHistory","BitrixVue","createApp","beforeCreate","$bitrix","Application","set","use","mount","unmount"],"mappings":"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"}