this.BX=this.BX||{},function(t,e,n,r){"use strict";var o={name:"Text",template:'\n\t\t<div class="text">\n\t\t\t<slot></slot>\n\t\t</div>\n  '},s={name:"Home",components:{Text:o},template:'\n    <Text>\n      <p><strong>1. Создание бота через BotFather</strong></p>\n      <blockquote>\n      <p>1. Откройте приложение Telegram и найдите бота <a\n      href="https://t.me/BotFather">BotFather</a>.</p>\n      <p>2. Нажмите <strong>Start</strong> для начала работы с BotFather.</p>\n      <p>3. Для создания нового бота введите команду /newbot.</p>\n      <p>4. BotFather попросит вас ввести имя для вашего бота. Введите\n      желаемое имя (например, “МойБот”).</p>\n      <p>5. Далее потребуется указать уникальное имя пользователя (username)\n      для бота. Оно должно оканчиваться на слово bot (например,\n      MyTestBot).</p>\n      <p>6. После успешного создания BotFather выдаст вам <strong>токен\n      API</strong>. Этот токен понадобится для интеграции бота с нашей\n      системой.</p>\n      </blockquote>\n    </Text>\n    <RouterLink to="/first">\n        <button class="btn btn-primary">Далее</button>\n    </RouterLink>\n    <Text>\n      <p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n      нашему менеджеру поддержки.</p>\n    </Text>\n  '},i={props:["open","type"],name:"Alert",template:'\n  <div v-if="type == \'error\'" role="alert" class="alert alert-error" :class="{open:open}">\n    <svg\n      xmlns="http://www.w3.org/2000/svg"\n      class="h-6 w-6 shrink-0 stroke-current"\n      fill="none"\n      viewBox="0 0 24 24">\n      <path\n        stroke-linecap="round"\n        stroke-linejoin="round"\n        stroke-width="2"\n        d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />\n    </svg>\n    <span>\n      <slot></slot>\n    </span>\n  </div>\n\n  <div v-if="type == \'success\'" role="alert" class="alert alert-success" :class="{open:open}">\n    <svg\n      xmlns="http://www.w3.org/2000/svg"\n      class="h-6 w-6 shrink-0 stroke-current"\n      fill="none"\n      viewBox="0 0 24 24">\n      <path\n        stroke-linecap="round"\n        stroke-linejoin="round"\n        stroke-width="2"\n        d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />\n    </svg>\n    <span>\n      <slot></slot>\n    </span>\n  </div>\n  '},a=r.defineStore("store",{state:function(){return{api_key:""}},getters:{getApiKeyLength:function(){return this.api_key.length}},actions:{setApiKey:function(t){this.api_key=t}}});function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach((function(e){babelHelpers.defineProperty(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var l={name:"First",components:{Text:o,Alert:i},data:function(){return{error:!1,progress:!1}},computed:c({},r.mapState(a,["api_key"])),methods:c({sendApiKey:function(){var t=this;this.progress=!0,BX.ajax.runComponentAction("custom:form-tg","sendApiKey",{mode:"class",data:{api_key:this.api_key},analyticsLabel:{viewMode:"grid",filterState:"closed"}}).then((function(e){t.progress=!1,e.data.response.ok?(t.error=!1,t.$router.push("/second")):t.error=!0}),(function(t){console.log(t)}))},onEnter:function(){this.api_key.length>=46&&this.sendApiKey()}},r.mapActions(a,["setApiKey"])),watch:{api_key:function(t){t.length>0&&(this.error=!1)}},template:'\n    <Text>\n      <p><strong>2. Передача токена API нам</strong></p>\n      <blockquote>\n      <p>1. Скопируйте <strong>токен API</strong>, который вы получили от\n      BotFather.</p>\n      <p>2. Вставьте токен ниже в соответствующее поле. Мы используем его для связи вашего\n      бота с нашей системой.</p>\n      </blockquote>\n    </Text>\n\n    <label class="input input-bordered flex items-center gap-2 mb-8 input-primary" :class="{\'input-error\':error}">\n      <svg\n        xmlns="http://www.w3.org/2000/svg"\n        viewBox="0 0 16 16"\n        fill="currentColor"\n        class="h-4 w-4 opacity-70">\n        <path\n          fill-rule="evenodd"\n          d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"\n          clip-rule="evenodd" />\n      </svg>\n      <input type="password" class="grow" @input="(e)=>setApiKey(e.currentTarget.value)" :value="api_key" @keyup.native.enter="onEnter"/>\n      <span ref="progress" class="loading loading-spinner loading-md transition-all" :class="{\'opacity-100\':progress, \'opacity-0\':!progress}"></span>\n    </label>\n    <Alert :open="error" :type="\'error\'">Api ключ не найден</Alert>\n\n    <div class="join">\n      <button @click="$router.back()" class="btn btn-outline join-item">Назад</button>\n      <button @click="sendApiKey" class="btn btn-primary join-item" :disabled="api_key.length<46 || error">Далее</button>\n    </div>\n\n\t\t<Text>\n\t\t\t<p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n\t\t\tнашему менеджеру поддержки.</p>\n\t\t</Text>\n  '};function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}var m={name:"Second",components:{Text:o,Alert:i,Otp:{props:["count","open","error"],name:"Otp",data:function(){return{code:"",currentNumber:1}},mounted:function(){this.count||(this.count=4)},methods:{selectDigit:function(t){this.$refs.otpInput.selectionStart=t-1,this.$refs.otpInput.selectionEnd=t,this.currentNumber=this.$refs.otpInput.selectionStart+1},setSelected:function(t){var e=this;if(this.$emit("input",t),"Space"==t.code&&(t.preventDefault(),t.stopPropagation()),"ArrowLeft"==t.key)this.$refs.otpInput.setSelectionRange(this.$refs.otpInput.selectionStart-1,this.$refs.otpInput.selectionStart,"forward"),this.currentNumber=this.$refs.otpInput.selectionStart+1;else if("ArrowRight"==t.key)this.$refs.otpInput.setSelectionRange(this.$refs.otpInput.selectionStart,this.$refs.otpInput.selectionStart+1,"forward"),this.currentNumber=this.$refs.otpInput.selectionStart+2;else if("Backspace"==t.key){t.preventDefault();var n=this.$refs.otpInput.selectionStart;this.code=this.code.slice(0,n)+this.code.slice(n+1),setTimeout((function(){e.$refs.otpInput.setSelectionRange(n-1,n,"forward")}),0),this.currentNumber=this.$refs.otpInput.selectionStart>0?this.$refs.otpInput.selectionStart:1}else isNaN(+t.key)||" "==t.key||this.$refs.otpInput.setSelectionRange(this.$refs.otpInput.selectionStart,this.$refs.otpInput.selectionStart+1,"forward")},changeCode:function(t){this.code=t.currentTarget.value,this.currentNumber=this.$refs.otpInput.selectionStart+1,this.code.length==this.count&&this.$emit("complete",this.code)}},watch:{open:function(t){t&&this.$refs.otpInput.focus()}},template:'\n  <div class="otp" :class="{open:open, error:error}">\n    <input type="text" ref="otpInput" autocomplete="one-time-code" :maxlength="count" inputmode="numeric" @input="changeCode" :value="code" @keydown="setSelected">\n    <div class="digits" @click="$refs.otpInput.focus()">\n      <span @click="selectDigit(n)" v-for="n in count" ref="digit" :class="{\'current\':n == currentNumber,\'field\':code[n-1]}">{{code[n-1]}}</span>\n    </div>\n  </div>\n  '}},data:function(){return{error:!1,formOpen:!1,timer:0}},mounted:function(){this.api_key.length<46&&this.$router.push("/first")},computed:function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){babelHelpers.defineProperty(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},r.mapState(a,["api_key"])),methods:{sendMessage:function(){var t=this;if(!(this.timer>0)){this.timer=60;var e=setInterval((function(){t.timer--,0===t.timer&&clearInterval(e)}),1e3);BX.ajax.runComponentAction("custom:form-tg","getUserId",{mode:"class",data:{api_key:this.api_key}}).then((function(e){console.log(null==e?void 0:e.data),t.formOpen=!0}),(function(e){console.error(e),t.error=!0}))}},otpComplete:function(t){var e=this;BX.ajax.runComponentAction("custom:form-tg","otpConfirm",{mode:"class",data:{code:t}}).then((function(t){!0===(null==t?void 0:t.data)?e.$router.push("/third"):e.error=!0}),(function(t){console.error(t),e.error=!0}))}},template:'\n    <Text>\n      <p><strong>3. Получение вашего Telegram ID</strong></p>\n      <p>Для того чтобы мы могли отправлять вам заявки через бота, нам\n      потребуется ваш <strong>Telegram ID</strong>. Вот как его можно\n      получить:</p>\n      <blockquote>\n      <p>1. В вашем созданном боте отправьте любое сообщение (например,\n      “Привет”).</p>\n      <p>2. Мы отправим вам код, который нужно будет ввести в поле ниже.</p>\n      </blockquote>\n    </Text>\n\n    <Otp :error="error" :open="formOpen" :count="6" @complete="otpComplete" @input="error=false"/>\n    <Alert :open="error" :type="\'error\'">Неверный код</Alert>\n\n    <div class="join">\n\t\t\t<button @click="$router.back()" class="btn btn-outline join-item">Назад</button>\n\t\t\t<button @click="sendMessage" class="btn btn-primary join-item" :disabled="timer!=0">\n\t\t\t\t<span v-if="timer==0">Получить код</span>\n\t\t\t\t<span v-else class="countdown">\n\t\t\t\t\t<span :style="{\'--value\':timer}"></span>\n\t\t\t\t</span>\n\t\t\t</button>\n\n\n\t\t</div>\n\n\t\t<Text>\n\t\t\t<p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n\t\t\tнашему менеджеру поддержки.</p>\n\t\t</Text>\n  '},d={name:"Third",components:{Text:o},data:function(){return{dataArr:{}}},mounted:function(){var t=this;BX.ajax.runComponentAction("custom:form-tg","getBotData",{mode:"class"}).then((function(e){t.dataArr=null==e?void 0:e.data,t.dataArr.message_id||t.$router.push("/")}),(function(e){console.error(e),t.$router.push("/")}))},methods:{confirm:function(){var t=this;BX.ajax.runComponentAction("custom:form-tg","confirm",{mode:"class"}).then((function(e){null!=e&&e.data&&t.$router.push("/thanks")}),(function(e){console.error(e),t.$router.push("/")}))}},template:'\n  <Text>\n    <p><strong>4. Подтверждение данных</strong></p>\n    <p><strong>Ваш аккаунт:</strong></p>\n    <blockquote>\n\n    <template v-if="!dataArr?.chat?.username">\n      <p><div class="skeleton h-6 w-full"></div></p>\n      <p><div class="skeleton h-40 w-40"></div></p>\n    </template>\n    <template v-else>\n      <p>{{dataArr?.chat?.first_name}} {{dataArr?.chat?.last_name}} <strong>@{{dataArr?.chat?.username}}</strong></p>\n      <p>\n        <div class="avatar">\n          <div class="rounded-xl w-40">\n            <img :src="dataArr?.photo"/>\n          </div>\n        </div>\n      </p>\n    </template>\n\n    </blockquote>\n    <p><strong>Ваш бот:</strong></p>\n    <blockquote>\n\n      <p v-if="!dataArr?.from?.username"><div class="skeleton h-6 w-full"></div></p>\n      <p v-else>{{dataArr?.from?.first_name}} <strong>@{{dataArr?.from?.username}}</strong></p>\n\n    </blockquote>\n  </Text>\n\n  <div class="join">\n    <button @click="$router.back()" class="btn btn-outline join-item">Назад</button>\n    <button @click="confirm" class="btn btn-primary join-item">Подтвердить</button>\n  </div>\n\n  <Text>\n    <p>Если у вас возникли какие-либо вопросы, вы всегда можете обратиться к\n    нашему менеджеру поддержки.</p>\n  </Text>\n  '},h={name:"Thanks",components:{Text:o,Alert:i},data:function(){return{go:!1}},mounted:function(){var t=this;setTimeout((function(){t.go=!0}),500)},template:'\n  <Text style="margin-bottom: 100px;">\n    <p><strong>Всё готово!</strong></p>\n  </Text>\n  <Alert :open="go" :type="\'success\'">Ваш бот успешно подключен и настроен для работы с нашей системой. Теперь вы сможете получать заявки и уведомления через него.</Alert>\n  '};function f(t,e,n){!function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t,e),e.set(t,n)}var g=r.createPinia(),b=new WeakMap,v=function(){function t(e){babelHelpers.classCallCheck(this,t),f(this,b,{writable:!0,value:void 0}),this.rootNode=document.querySelector(e)}return babelHelpers.createClass(t,[{key:"init",value:function(){var t=this,r=[{path:"/",component:s},{path:"/first",component:l},{path:"/second",component:m},{path:"/third",component:d},{path:"/thanks",component:h},{path:"/:pathMatch(.*)*",redirect:"/"}],i=n.createRouter({history:n.createWebHashHistory(),routes:r});babelHelpers.classPrivateFieldSet(this,b,e.BitrixVue.createApp({name:"FormTg",components:{Text:o},beforeCreate:function(){this.$bitrix.Application.set(t)},template:'\n\t\t\t<div class="application">\n\t\t\t\t<Text>\n\t\t\t\t\t<p><strong>Инструкция по созданию Telegram-бота</strong></p>\n\t\t\t\t\t<p>Для того чтобы настроить Telegram-бота и передать необходимые данные\n\t\t\t\t\tдля интеграции вашего мини-приложения, выполните следующие шаги:</p>\n\t\t\t\t</Text>\n\t\t\t\t<router-view v-slot="{ Component }">\n\t\t\t\t\t<Transition>\n\t\t\t\t\t\t<Component :is="Component" />\n\t\t\t\t\t</Transition>\n\t\t\t\t</router-view>\n\t\t\t</div>\n\t\t\t'})),babelHelpers.classPrivateFieldGet(this,b).use(i),babelHelpers.classPrivateFieldGet(this,b).use(g),babelHelpers.classPrivateFieldGet(this,b).mount(this.rootNode)}},{key:"destroy",value:function(){babelHelpers.classPrivateFieldGet(this,b).unmount()}}]),t}();t.FormTg=v}(this.BX.Local=this.BX.Local||{},BX.Vue3,BX.Vue3.VueRouter,BX.Vue3.Pinia);
//# sourceMappingURL=form-tg.bundle.js.map
